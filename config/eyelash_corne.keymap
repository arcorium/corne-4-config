#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        lsft_caps: lsft_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "LSFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPSLOCK>;
        };

        lctl_win: lctl_win {
            compatible = "zmk,behavior-tap-dance";
            label = "LCTL_WIN";
            #binding-cells = <0>;
            bindings = <&kp LCTRL>, <&kp LEFT_GUI>;
        };

        rsft_win: rsft_win {
            compatible = "zmk,behavior-tap-dance";
            label = "RSFT_WIN";
            #binding-cells = <0>;
            bindings = <&kp RSHIFT>, <&kp RWIN>;
        };

        mouse_click: mouse_click {
            compatible = "zmk,behavior-tap-dance";
            label = "MOUSE_CLICK";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&mkp RCLK>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E               &kp R  &kp T                                          &msc SCRL_UP                     &kp Y      &kp U  &kp I       &kp O    &kp P        &kp BSPC
&lsft_caps  &kp A  &kp S  &kp D               &kp F  &kp G                          &msc SCRL_LEFT  &mouse_click    &msc SCRL_RIGHT  &kp H      &kp J  &kp K       &kp L    &kp SEMI     &rsft_win
&lctl_win   &kp Z  &kp X  &kp C               &kp V  &kp B      &kp C_PLAY_PAUSE                    &msc SCRL_DOWN                   &kp N      &kp M  &kp COMMA   &kp DOT  &lt 6 SLASH  &mt LCTRL ESCAPE
                          &mt LEFT_ALT GRAVE  &kp A  &kp SPACE                                                                       &kp ENTER  &mo 4  &mt RALT B
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Nulled {
            bindings = <
&kp TAB     &mkp LCLK  &mkp MB4  &mkp MB3        &mkp MB5  &mkp RCLK                              &mmv MOVE_UP                     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &kp BACKSPACE
&lsft_caps  &none      &none     &none           &none     &none                  &mmv MOVE_LEFT  &mouse_click    &mmv MOVE_RIGHT  &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &none  &rsft_win
&lctl_win   &none      &none     &none           &none     &none      &kp C_PP                    &mmv MOVE_DOWN                   &none           &none           &none         &none            &mo 6  &mt RCTRL ESCAPE
                                 &mt LALT GRAVE  &mo 3     &kp SPACE                                                               &kp ENTER       &mo 4           &mt RALT B
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Numpad {
            bindings = <
&kp TAB        &kp KP_SUBTRACT  &kp KP_NUMBER_9  &kp KP_NUMBER_8  &kp KP_NUMBER_7  &kp KP_NUM                                   &msc SCRL_UP                     &kp KP_NUM       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT    &kp BACKSPACE
&kp KP_DIVIDE  &kp KP_PLUS      &kp KP_NUMBER_6  &kp KP_NUMBER_5  &kp KP_NUMBER_4  &kp KP_DOT                   &msc SCRL_LEFT  &mouse_click    &msc SCRL_RIGHT  &kp KP_DOT       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS        &kp KP_DIVIDE
&kp CARET      &kp KP_MULTIPLY  &kp KP_NUMBER_3  &kp KP_NUMBER_2  &kp KP_NUMBER_1  &kp KP_NUMBER_0  &kp C_PP                    &msc SCRL_DOWN                   &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &lt 6 KP_MULTIPLY  &kp CARET
                                                 &mt LALT GRAVE   &mo 3            &kp SPACE                                                                     &kp KP_ENTER     &mo 4            &mt RALT B
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE  &kp F1        &kp F2  &kp F3    &kp F4      &kp F5                                 &mmv MOVE_UP                     &kp F6     &kp F7         &kp F8        &kp N9                &kp F10                &kp DELETE
&trans      &kp NUMBER_1  &kp N2  &kp N3    &kp N4      &kp N5                 &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp F11
&trans      &kp EXCL      &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans                    &mmv MOVE_DOWN                   &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F12
                                  &trans    &trans      &kp ENTER                                                               &kp SPACE  &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESCAPE  &kp MINUS      &kp UNDERSCORE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH                                &mmv MOVE_UP                     &kp EXCL    &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR       &kp DELETE
&trans      &kp EQUAL      &kp PLUS          &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE                     &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &kp LEFT    &kp DOWN  &kp UP     &kp RIGHT  &kp SEMICOLON  &trans
&trans      &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION      &kp SINGLE_QUOTE   &kp DOUBLE_QUOTES  &trans                    &mmv MOVE_DOWN                   &kp INSERT  &kp HOME  &kp END    &kp PG_UP  &kp PG_DN      &trans
                                             &trans            &trans             &kp ENTER                                                                     &kp SPACE   &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Adjust {
            display-name = "Fn";
            bindings = <
&kp ESCAPE  &rgb_ug RGB_SAI  &bt BT_PRV       &bt BT_CLR       &bt BT_NXT       &bt BT_CLR_ALL                             &mmv MOVE_UP                     &kp KP_NUM      &kp C_BRIGHTNESS_DEC  &trans            &kp C_BRIGHTNESS_INC  &kp CAPSLOCK     &kp DELETE
&trans      &rgb_ug RGB_BRD  &bl BL_DEC       &bl BL_TOG       &bl BL_INC       &bl BL_CYCLE               &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &kp SCROLLLOCK  &kp C_VOL_DN          &kp C_MUTE        &kp C_VOLUME_UP       &caps_word       &trans
&trans      &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &trans                    &mmv MOVE_DOWN                   &key_repeat     &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT            &kp PRINTSCREEN  &trans
                                              &trans           &trans           &kp ENTER                                                                   &kp SPACE       &trans                &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        Switch {
            bindings = <
&kp TAB  &to 0   &to 1   &to 2   &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };
};
